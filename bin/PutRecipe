#!/bin/sh

### Imports ###################################################################

source ScriptFunctions
Import GoboLinux
Import OptionParser

Parse_Conf Compile/Compile.conf
Parse_Conf CompileSubversion.conf

### Options ###################################################################

scriptDescription="Put a recipe in the svn trunk/revision tree and upload it to the store."
scriptCredits="Copyright (C) 2007 Lucas C. Villa Real. Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="[<recipe dirs>|<tarballs>]"
scriptExample="/Files/Compile/LocalRecipes/Firefox"
Add_Option_Boolean "s" "store" "Also upload to the recipe store"
Parse_Options "$@"

### Operation #################################################################

unset programlist
eval `Args_To_Array suppliedrecipes`

for entry in ${suppliedrecipes[@]}
do
   # Uncompress the file if it's a tarball
   if `file $entry | grep -q bzip2`
   then 
      entry=`aunpack $entry --extract-to=$compileLocalRecipesDir | cut -d/ -f1 | head -n 1`
   fi

   # Perform some simple cleanups
   for i in `find $entry -name Recipe`
   do
      cat $i | sed -e 's,$target/../Settings,$settings_target,g' \
                   -e 's,$target/../Variable,$variable_target,g' \
                   > x && mv x $i
   done

   # Removes revisions from submitted recipes
   program=`basename $entry`
   for version in $entry/*
   do
      if echo "$version" | grep -q "\-r"
      then
         newversion=`echo $version | sed 's,/\(.*\)-r.*,/\1,g'`
         mv "$version" "$newversion"
      fi
   done
   
   # Create a tarball and store it at /Files/Compile/PackedRecipes
   PackRecipe $program || exit 1

   for tarball in `ls -t ${compilePackedRecipesDir}/${program}*`
   do
      version=`basename $tarball | sed 's,\(.*\)--\(.*\)--.*,\2,g'`
      # Merge the recipe into the local trunk
      ImportRecipe $tarball || exit 1

      Quiet pushd $compileLocalTrunk/$program/$version
      contextlines=`svn diff --non-interactive | wc -l`
      Quiet popd
      programlist="$program $programlist"
      [ $contextlines -eq 0 ] && continue
    
      # Commit the trunk and/or the revision tree.
      PublishRevision --skip-lint $program $version || exit 1
   done
done

# Copy the recipe to the store
if [ "$programlist" ] && Boolean "store"
then UpdateRecipeStore $programlist
fi
