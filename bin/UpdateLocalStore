#!/bin/sh
export CPLUS_INCLUDE_PATH=/home/gobolinux/Rootless/System/Links/Headers
export C_INCLUDE_PATH=/home/gobolinux/Rootless/System/Links/Headers
export HOME=/home/gobolinux
export HOST=oakdale
export INFOPATH=/home/gobolinux/Rootless/System/Links/Manuals/info:
export LANG=C
export LANGUAGE=C
#en_US:en_GB:en
export LD_LIBRARY_PATH=/home/gobolinux/Rootless/System/Links/Libraries:
export LOGNAME=gobolinux
export PATH=/home/gobolinux/Rootless/System/Links/Executables:/home/gobolinux/Rootless/System/Links/Executables:/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:.:.
export PYTHONPATH=/home/gobolinux/Rootless/System/Links/Libraries/python2.3/site-packages:/home/gobolinux/Rootless/System/Links/Libraries/python2.4/site-packages:
export ROOTLESS_GOBOLINUX=1
export SHELL=/bin/zsh
export TERM=xterm-color
export TMPDIR=/home/gobolinux/Rootless/System/Variable/tmp
export USER=gobolinux
export USERNAME=gobolinux
export goboPrefix=/home/gobolinux/Rootless

### Imports ###################################################################

source ScriptFunctions
Import GoboLinux
Import File
Import OptionParser

### Options ###################################################################

scriptDescription="Update a local store based on git repository."
scriptCredits="Copyright (C) 2007-2017 Hisham Muhammad. Released under the GNU GPL."
scriptUsage=""
scriptExample=""

Parse_Options "$@"

Parse_Conf CompileGit.conf

###############################################################################

echo `date` Started >> ~/cronlog.txt

revisionsDir="$HOME/git/Recipes/revisions"
mkdir -p "$compileLocalStore"

packdir=`Temporary_Dir`
pull_log="$packdir/gitpull.log"

download_mirror_url() {
   local program="$1"
   local verrev="$2"
   local version="${verrev%-r*}"
   local mirrorUrlDir="$HOME/gobolinux.org/mirror_url"
   
   local recipeFile="$revisionsDir/$program/$verrev/Recipe"
   if [ ! -e "$recipeFile" ]
   then
      return
   fi
   
   local url=$(sed -n 's,url=['\''"]\(.*\)['\''"]$,\1,p;s,url=\(.*\),\1,p' "$recipeFile")
   if [ ! "$url" ]
   then
      echo "Variable url not found in recipe for $program $verrev" >> ~/cronlog.txt
      return
   fi
   
   local tarball=$(basename "$url")
   local tarballPathname="$mirrorUrlDir/$program/$version/$tarball"
   if [ -e "$tarballPathname" ]
   then
      echo "Already downloaded $tarball for $program $version" >> ~/cronlog.txt
      return
   fi
   
   if [[ ! "$tarball" =~ (tar.gz|tgz|tar.bz2|tbz|tbz2|zip|tar.xz|tar.lzma|tar.lz)$ ]]
   then
      echo "Unknown archive extension in $tarball for $program $version" >> ~/cronlog.txt
      return
   fi

   mkdir -p $(dirname "$tarballPathname")   
   echo "Fetching $tarball for $program $version" >> ~/cronlog.txt
   wget --output-document="$tarballPathname" -o /dev/null "$url" &
}

cd "$revisionsDir"
git pull &> "$pull_log"
{
   if [ "$(Arg 1)" ]
   then
      ls | grep -i "$(Arg 1)"
   else
      grep "^ create .*revisions/.*Recipe$" "$pull_log" | cut -d/ -f2 
   fi
} | while read program
do
   unset prevversion
   unset prevrecipe   
   unset prevjustversion
   versions=(`cd $program; ls`)
   [ "$versions" ] || continue
   for version in `GuessLatest -l "${versions[@]}"`
   do
      revision=${version#*-r}
      justversion=${version%-r*}
      recipe="$compileLocalStore/$program--$version--recipe.tar.bz2"

      if [ "$prevjustversion" == "$justversion" -a "$version" != "$prevversion" ]
      then 
         rm -f "$recipe"
      elif [ ! -e "$recipe" ]
      then
         Quiet pushd "$packdir"
         mkdir "$program"
         cp -a "$revisionsDir/$program/$version" "$program/$version"
         tar cjpf "$recipe" "$program/$version"
         Log_Normal "Packed $recipe"
         download_mirror_url "$program" "$version"
         Quiet popd
      fi
      prevversion="$version"
      prevjustversion="$justversion"
   done
   
done

rm -rf "$packdir"

cd $compileLocalStore
rm MANIFEST MANIFEST.bz2 RecipeList RecipeList.bz2
ls | grep ".*--recipe.*" > MANIFEST
cp MANIFEST RecipeList
bzip2 --keep MANIFEST
bzip2 --keep RecipeList

echo `date` Finished >> ~/cronlog.txt
wget -O /dev/null -o /dev/null http://www.gobolinux.org/tools/genlatestrecipes.php
